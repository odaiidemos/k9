"""add_handler_daily_schedule_and_reports

Revision ID: de8b4e15a78f
Revises: 159a048b5c17
Create Date: 2025-10-26 01:18:43.121503

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'de8b4e15a78f'
down_revision = '159a048b5c17'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_schedule',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'LOCKED', name='schedulestatus'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by_user_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date', 'project_id', name='uq_daily_schedule_date_project')
    )
    with op.batch_alter_table('daily_schedule', schema=None) as batch_op:
        batch_op.create_index('idx_daily_schedule_date', ['date'], unique=False)
        batch_op.create_index('idx_daily_schedule_status', ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_daily_schedule_date'), ['date'], unique=False)

    op.create_table('notification',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Enum('SCHEDULE_CREATED', 'EMPLOYEE_REPLACED', 'TASK_ASSIGNED', 'REPORT_SUBMITTED', 'REPORT_APPROVED', 'REPORT_REJECTED', name='notificationtype'), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('related_id', sa.String(length=36), nullable=True),
    sa.Column('related_type', sa.String(length=50), nullable=True),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.create_index('idx_notification_created', ['created_at'], unique=False)
        batch_op.create_index('idx_notification_user_read', ['user_id', 'read'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_read'), ['read'], unique=False)

    op.create_table('daily_schedule_item',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('daily_schedule_id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('dog_id', sa.UUID(), nullable=True),
    sa.Column('shift_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.Enum('PLANNED', 'PRESENT', 'ABSENT', 'REPLACED', name='scheduleitemstatus'), nullable=False),
    sa.Column('replacement_employee_id', sa.UUID(), nullable=True),
    sa.Column('absence_reason', sa.String(length=500), nullable=True),
    sa.Column('replacement_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['daily_schedule_id'], ['daily_schedule.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['dog_id'], ['dog.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['replacement_employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['shift_id'], ['shift.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('daily_schedule_item', schema=None) as batch_op:
        batch_op.create_index('idx_schedule_item_employee', ['employee_id'], unique=False)
        batch_op.create_index('idx_schedule_item_status', ['status'], unique=False)

    op.create_table('handler_report',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('schedule_item_id', sa.UUID(), nullable=True),
    sa.Column('handler_user_id', sa.UUID(), nullable=False),
    sa.Column('dog_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'SUBMITTED', 'APPROVED', 'REJECTED', name='reportstatus'), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('reviewed_by_user_id', sa.UUID(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('review_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['dog_id'], ['dog.id'], ),
    sa.ForeignKeyConstraint(['handler_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['schedule_item_id'], ['daily_schedule_item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('handler_report', schema=None) as batch_op:
        batch_op.create_index('idx_handler_report_date', ['date'], unique=False)
        batch_op.create_index('idx_handler_report_handler', ['handler_user_id'], unique=False)
        batch_op.create_index('idx_handler_report_status', ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_handler_report_date'), ['date'], unique=False)

    op.create_table('handler_report_behavior',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('report_id', sa.UUID(), nullable=False),
    sa.Column('good_behavior_notes', sa.Text(), nullable=True),
    sa.Column('bad_behavior_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['handler_report.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_id')
    )
    op.create_table('handler_report_care',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('report_id', sa.UUID(), nullable=False),
    sa.Column('food_amount', sa.String(length=100), nullable=True),
    sa.Column('food_type', sa.String(length=200), nullable=True),
    sa.Column('supplements', sa.String(length=200), nullable=True),
    sa.Column('water_amount', sa.String(length=100), nullable=True),
    sa.Column('grooming_done', sa.Boolean(), nullable=True),
    sa.Column('washing_done', sa.Boolean(), nullable=True),
    sa.Column('excretion_location', sa.String(length=200), nullable=True),
    sa.Column('stool_color', sa.Enum('BROWN', 'YELLOW', 'GREEN', 'BLACK', 'RED', 'WHITE', name='stoolcolor'), nullable=True),
    sa.Column('stool_shape', sa.Enum('NORMAL', 'HARD', 'SOFT', 'LIQUID', name='stoolshape'), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['handler_report.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_id')
    )
    op.create_table('handler_report_health',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('report_id', sa.UUID(), nullable=False),
    sa.Column('eyes_status', sa.Enum('NORMAL', 'ABNORMAL', 'NEEDS_ATTENTION', name='healthcheckstatus'), nullable=True),
    sa.Column('eyes_notes', sa.String(length=500), nullable=True),
    sa.Column('nose_status', sa.Enum('NORMAL', 'ABNORMAL', 'NEEDS_ATTENTION', name='healthcheckstatus'), nullable=True),
    sa.Column('nose_notes', sa.String(length=500), nullable=True),
    sa.Column('ears_status', sa.Enum('NORMAL', 'ABNORMAL', 'NEEDS_ATTENTION', name='healthcheckstatus'), nullable=True),
    sa.Column('ears_notes', sa.String(length=500), nullable=True),
    sa.Column('mouth_status', sa.Enum('NORMAL', 'ABNORMAL', 'NEEDS_ATTENTION', name='healthcheckstatus'), nullable=True),
    sa.Column('mouth_notes', sa.String(length=500), nullable=True),
    sa.Column('teeth_status', sa.Enum('NORMAL', 'ABNORMAL', 'NEEDS_ATTENTION', name='healthcheckstatus'), nullable=True),
    sa.Column('teeth_notes', sa.String(length=500), nullable=True),
    sa.Column('gums_status', sa.Enum('NORMAL', 'ABNORMAL', 'NEEDS_ATTENTION', name='healthcheckstatus'), nullable=True),
    sa.Column('gums_notes', sa.String(length=500), nullable=True),
    sa.Column('front_limbs_status', sa.Enum('NORMAL', 'ABNORMAL', 'NEEDS_ATTENTION', name='healthcheckstatus'), nullable=True),
    sa.Column('front_limbs_notes', sa.String(length=500), nullable=True),
    sa.Column('back_limbs_status', sa.Enum('NORMAL', 'ABNORMAL', 'NEEDS_ATTENTION', name='healthcheckstatus'), nullable=True),
    sa.Column('back_limbs_notes', sa.String(length=500), nullable=True),
    sa.Column('hair_status', sa.Enum('NORMAL', 'ABNORMAL', 'NEEDS_ATTENTION', name='healthcheckstatus'), nullable=True),
    sa.Column('hair_notes', sa.String(length=500), nullable=True),
    sa.Column('tail_status', sa.Enum('NORMAL', 'ABNORMAL', 'NEEDS_ATTENTION', name='healthcheckstatus'), nullable=True),
    sa.Column('tail_notes', sa.String(length=500), nullable=True),
    sa.Column('rear_status', sa.Enum('NORMAL', 'ABNORMAL', 'NEEDS_ATTENTION', name='healthcheckstatus'), nullable=True),
    sa.Column('rear_notes', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['handler_report.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_id')
    )
    op.create_table('handler_report_incident',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('report_id', sa.UUID(), nullable=False),
    sa.Column('incident_type', sa.Enum('SUSPICION', 'DETECTION', name='incidenttype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('incident_datetime', sa.DateTime(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['handler_report.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('handler_report_training',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('report_id', sa.UUID(), nullable=False),
    sa.Column('training_type', sa.Enum('FITNESS', 'AGILITY', 'OBEDIENCE', 'BALL', 'EXPLOSIVES', 'OTHER', name='trainingtype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('time_from', sa.Time(), nullable=True),
    sa.Column('time_to', sa.Time(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['handler_report.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('handler_report_attachment',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('incident_id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('sha256_hash', sa.String(length=64), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['incident_id'], ['handler_report_incident.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('handler_report_attachment')
    op.drop_table('handler_report_training')
    op.drop_table('handler_report_incident')
    op.drop_table('handler_report_health')
    op.drop_table('handler_report_care')
    op.drop_table('handler_report_behavior')
    with op.batch_alter_table('handler_report', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_handler_report_date'))
        batch_op.drop_index('idx_handler_report_status')
        batch_op.drop_index('idx_handler_report_handler')
        batch_op.drop_index('idx_handler_report_date')

    op.drop_table('handler_report')
    with op.batch_alter_table('daily_schedule_item', schema=None) as batch_op:
        batch_op.drop_index('idx_schedule_item_status')
        batch_op.drop_index('idx_schedule_item_employee')

    op.drop_table('daily_schedule_item')
    with op.batch_alter_table('notification', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_read'))
        batch_op.drop_index(batch_op.f('ix_notification_created_at'))
        batch_op.drop_index('idx_notification_user_read')
        batch_op.drop_index('idx_notification_created')

    op.drop_table('notification')
    with op.batch_alter_table('daily_schedule', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_daily_schedule_date'))
        batch_op.drop_index('idx_daily_schedule_status')
        batch_op.drop_index('idx_daily_schedule_date')

    op.drop_table('daily_schedule')
    # ### end Alembic commands ###
