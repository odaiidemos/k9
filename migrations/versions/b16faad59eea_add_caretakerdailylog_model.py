"""Add CaretakerDailyLog model

Revision ID: b16faad59eea
Revises: breeding_training_001
Create Date: 2025-09-12 12:49:43.084982

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b16faad59eea'
down_revision = 'breeding_training_001'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('caretaker_daily_log',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.Column('dog_id', sa.UUID(), nullable=False),
    sa.Column('caretaker_employee_id', sa.UUID(), nullable=True),
    sa.Column('kennel_code', sa.String(length=50), nullable=True),
    sa.Column('house_clean', sa.Boolean(), nullable=False),
    sa.Column('house_vacuum', sa.Boolean(), nullable=False),
    sa.Column('house_tap_clean', sa.Boolean(), nullable=False),
    sa.Column('house_drain_clean', sa.Boolean(), nullable=False),
    sa.Column('dog_clean', sa.Boolean(), nullable=False),
    sa.Column('dog_washed', sa.Boolean(), nullable=False),
    sa.Column('dog_brushed', sa.Boolean(), nullable=False),
    sa.Column('bowls_bucket_clean', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['caretaker_employee_id'], ['employee.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['dog_id'], ['dog.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dog_id', 'date', name='uq_caretaker_daily_dog_date')
    )
    with op.batch_alter_table('caretaker_daily_log', schema=None) as batch_op:
        batch_op.create_index('ix_caretaker_daily_date', ['date'], unique=False)
        batch_op.create_index('ix_caretaker_daily_dog_date', ['dog_id', 'date'], unique=False)
        batch_op.create_index('ix_caretaker_daily_project_date', ['project_id', 'date'], unique=False)

    with op.batch_alter_table('veterinary_visit', schema=None) as batch_op:
        batch_op.create_index('idx_veterinary_dog_date', ['dog_id', 'visit_date'], unique=False)
        batch_op.create_index('idx_veterinary_project_date', ['project_id', 'visit_date'], unique=False)
        batch_op.create_index('idx_veterinary_type_date', ['visit_type', 'visit_date'], unique=False)
        batch_op.create_index('idx_veterinary_vet_date', ['vet_id', 'visit_date'], unique=False)
        batch_op.create_index('idx_veterinary_visit_date', ['visit_date'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('veterinary_visit', schema=None) as batch_op:
        batch_op.drop_index('idx_veterinary_visit_date')
        batch_op.drop_index('idx_veterinary_vet_date')
        batch_op.drop_index('idx_veterinary_type_date')
        batch_op.drop_index('idx_veterinary_project_date')
        batch_op.drop_index('idx_veterinary_dog_date')

    with op.batch_alter_table('caretaker_daily_log', schema=None) as batch_op:
        batch_op.drop_index('ix_caretaker_daily_project_date')
        batch_op.drop_index('ix_caretaker_daily_dog_date')
        batch_op.drop_index('ix_caretaker_daily_date')

    op.drop_table('caretaker_daily_log')
    # ### end Alembic commands ###
