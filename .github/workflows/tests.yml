# GitHub Actions workflow لتشغيل الاختبارات تلقائياً
name: 🧪 اختبارات شاملة

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # تشغيل يومي في الساعة 2 صباحاً
    - cron: '0 2 * * *'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_k9_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: 📥 استنساخ الكود
      uses: actions/checkout@v4
    
    - name: 🐍 إعداد Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: 📦 تثبيت التبعيات
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-flask pytest-mock factory-boy coverage
    
    - name: 🗄️ إعداد قاعدة البيانات
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_k9_db
      run: |
        python -c "from app import app, db; app.app_context().push(); db.create_all()"
    
    - name: 🧪 اختبارات الوحدة
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_k9_db
      run: |
        python -m pytest tests/unit/ -v --tb=short --junit-xml=unit-test-results.xml
    
    - name: 🔗 اختبارات التكامل
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_k9_db
      run: |
        python -m pytest tests/integration/ -v --tb=short --junit-xml=integration-test-results.xml
    
    - name: 📊 اختبارات مع تغطية الكود
      env:
        DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_k9_db
      run: |
        python -m pytest tests/ --cov=. --cov-report=xml --cov-report=html --cov-exclude=tests/*
    
    - name: 📈 رفع تقرير التغطية
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
    
    - name: 📋 نشر نتائج الاختبارات
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Test Results (Python ${{ matrix.python-version }})
        path: '*-test-results.xml'
        reporter: java-junit
    
    - name: 📁 حفظ تقارير التغطية
      if: matrix.python-version == '3.11'
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: htmlcov/

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 استنساخ الكود
      uses: actions/checkout@v4
    
    - name: 🐍 إعداد Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 🔒 فحص الأمان
      run: |
        pip install bandit safety
        bandit -r . -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true
    
    - name: 📋 نشر تقارير الأمان
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  performance-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 استنساخ الكود
      uses: actions/checkout@v4
    
    - name: 🐍 إعداد Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 📦 تثبيت التبعيات
      run: |
        pip install -r requirements.txt
        pip install pytest pytest-benchmark
    
    - name: ⚡ اختبارات الأداء
      run: |
        python -m pytest tests/ -k "performance" --benchmark-only --benchmark-json=benchmark.json || true
    
    - name: 📊 نشر تقارير الأداء
      uses: actions/upload-artifact@v3
      with:
        name: performance-report
        path: benchmark.json